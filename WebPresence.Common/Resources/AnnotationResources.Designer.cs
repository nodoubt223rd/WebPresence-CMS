//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebPresence.Common.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class AnnotationResources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal AnnotationResources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("WebPresence.Common.Resources.AnnotationResources", typeof(AnnotationResources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indexers not allowed in field specification expression.
        /// </summary>
        public static string IndexersNotAllowed {
            get {
                return ResourceManager.GetString("IndexersNotAllowed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Range Limits of DateRangeAttribute have invalid format.
        /// </summary>
        public static string InvalidDateFormat {
            get {
                return ResourceManager.GetString("InvalidDateFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The DateRangeAtrribute can be applied only to DateTime or Nullable&lt;DateTime&gt; properties.
        /// </summary>
        public static string InvalidDateRangeApplication {
            get {
                return ResourceManager.GetString("InvalidDateRangeApplication", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The DynamicRangeAttribute has been applied to an unsopported type.
        /// </summary>
        public static string InvalidDynamicRangeApplication {
            get {
                return ResourceManager.GetString("InvalidDynamicRangeApplication", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Range Limits of DynamicRangeAttribute have invalid format.
        /// </summary>
        public static string InvalidFormat {
            get {
                return ResourceManager.GetString("InvalidFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The dynamic minimum delay is invalid.
        /// </summary>
        public static string InvalidLowerDynamicDelay {
            get {
                return ResourceManager.GetString("InvalidLowerDynamicDelay", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The dynamic minimum is invalid.
        /// </summary>
        public static string InvalidLowerDynamicRange {
            get {
                return ResourceManager.GetString("InvalidLowerDynamicRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The dynamic maximum delay is invalid.
        /// </summary>
        public static string InvalidUpperDynamicDelay {
            get {
                return ResourceManager.GetString("InvalidUpperDynamicDelay", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The dynamic maximum is invalid.
        /// </summary>
        public static string InvalidUpperDynamicRange {
            get {
                return ResourceManager.GetString("InvalidUpperDynamicRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} is not in the required range.
        /// </summary>
        public static string StandardError {
            get {
                return ResourceManager.GetString("StandardError", resourceCulture);
            }
        }
    }
}
